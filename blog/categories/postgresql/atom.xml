<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: postgresql | Learn-a-holic Geek Notes]]></title>
  <link href="http://xajler.github.com/blog/categories/postgresql/atom.xml" rel="self"/>
  <link href="http://xajler.github.com/"/>
  <updated>2012-10-10T23:18:33+02:00</updated>
  <id>http://xajler.github.com/</id>
  <author>
    <name><![CDATA[Kornelije Sajler]]></name>
    <email><![CDATA[xajler@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Backing up PostgreSQL with backup and whatever gems on VPS]]></title>
    <link href="http://xajler.github.com/blog/2012/10/10/backing-up-postgresql-with-backup-and-whatever-gems/"/>
    <updated>2012-10-10T07:12:00+02:00</updated>
    <id>http://xajler.github.com/blog/2012/10/10/backing-up-postgresql-with-backup-and-whatever-gems</id>
    <content type="html"><![CDATA[<h2>Mission</h2>

<p>A few months ago I've created a <a href="https://github.com/xajler/mi-guest">simple Rails app</a> (after 6 years!!!)
that essentially stores guests and keeping track of accommodations for my friend's villa.</p>

<p>After a month in production I've started thinking about backup of the database. Code is on
the Github so I have only need to worry about database.</p>

<p>My first initial thoughts were on Dropbox, I've installed the Dropbox client on my no GUI
Ubunte Server, but when I ran the Dropbox the memory usage got doubled and I remove it all together!</p>

<p>Then I started thinking about good old FTP backup, I was sure that I want backup somewhere else
than the VPS the database is running. I have one  account at <a href="http://arvixe.com">Arvixe</a> Unlimited Linux hosting
and I've created the FTP user and even found <a href="https://github.com/meskyanichi/backup">backup gem</a> back then
but I just drop all together until today.</p>

<p>I have VPS at <a href="http://buyvm.net">BuyVM (ex Frantech)</a> and they were offering a free storage
VPS of 5Gb which is more than enough for my backup. I get one account and idea came again to use
it as backup...</p>

<p>...and the idea expanded with every day schedule of backup.</p>

<p>Incidentally, to day I finally get started my Octopress blog deployed via Github Pages, so I'm
writting all the steps as notes for futre usage, or if someone can be useful...</p>

<h2>backup Gem</h2>

<p>The <a href="https://github.com/meskyanichi/backup">backup gem</a> is one great gem with a lot of
backup options like databases, storages, compressions, encrypt-ors,...</p>

<h3>Install</h3>

<p>Installation is a straight forward like any Ruby Gem:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install backup
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Backup Model Generator</h3>

<p>backup gem have its own backup "model" generator that creates backup config files, this is a comprehensive usage:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Usage:
</span><span class='line'>  backup generate:model --trigger<span class="o">=</span>TRIGGER&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Options:
</span><span class='line'>  --trigger<span class="o">=</span>TRIGGER
</span><span class='line'>  <span class="o">[</span>--config-path<span class="o">=</span>CONFIG_PATH<span class="o">]</span>  <span class="c"># Path to your Backup configuration directory</span>
</span><span class='line'>  <span class="o">[</span>--databases<span class="o">=</span>DATABASES<span class="o">]</span>      <span class="c"># (mongodb, mysql, postgresql, redis, riak)</span>
</span><span class='line'>  <span class="o">[</span>--storages<span class="o">=</span>STORAGES<span class="o">]</span>        <span class="c"># (cloudfiles, dropbox, ftp, local, ninefold, rsync, s3, scp, sftp)</span>
</span><span class='line'>  <span class="o">[</span>--syncers<span class="o">=</span>SYNCERS<span class="o">]</span>          <span class="c"># (cloud_files, rsync_local, rsync_pull, rsync_push, s3)</span>
</span><span class='line'>  <span class="o">[</span>--encryptors<span class="o">=</span>ENCRYPTORS<span class="o">]</span>    <span class="c"># (gpg, openssl)</span>
</span><span class='line'>  <span class="o">[</span>--compressors<span class="o">=</span>COMPRESSORS<span class="o">]</span>  <span class="c"># (bzip2, gzip, lzma, pbzip2)</span>
</span><span class='line'>  <span class="o">[</span>--notifiers<span class="o">=</span>NOTIFIERS<span class="o">]</span>      <span class="c"># (campfire, hipchat, mail, presently, prowl, twitter)</span>
</span><span class='line'>  <span class="o">[</span>--archives<span class="o">]</span>
</span><span class='line'>  <span class="o">[</span>--splitter<span class="o">]</span>                 <span class="c"># use &lt;code&gt;--no-splitter&lt;/code&gt; to disable&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;                          <span class="c"># Default: true</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Generates a Backup model file</p>

<p>Let's create simple config file with backup generator:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>backup generate:model --trigger miguest_backup --databases<span class="o">=</span><span class="s2">&quot;postgresql&quot;</span> <span class="se">\</span>
</span><span class='line'>  --storages<span class="o">=</span><span class="s2">&quot;ftp&quot;</span> --compressors<span class="o">=</span><span class="s2">&quot;bzip2&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This will create a <code>config.rb</code> and <code>models/miguest_backup.rb</code> files in <code>~/Backup</code> folder.</p>

<h3>Refine backup Configuration</h3>

<p>Backup generator will create boilerplate model template needing more refinement. It looks something like this:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Boilerplate backup model template - miguest_backup.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;# encoding: utf-8</span>
</span><span class='line'>
</span><span class='line'><span class="sr">##</span>
</span><span class='line'><span class="sr"># Backup Generated: miguest_backup</span>
</span><span class='line'><span class="sr"># Once configured, you can run the backup with the following command:</span>
</span><span class='line'><span class="sr">#</span>
</span><span class='line'><span class="sr"># $ backup perform -t miguest_backup [-c &amp;lt;path_to_configuration_file&amp;gt;]</span>
</span><span class='line'><span class="sr">#</span>
</span><span class='line'><span class="sr">Backup::Model.new(:miguest_backup, &#39;Description for miguest_backup&#39;) do</span>
</span><span class='line'><span class="sr">  ##</span>
</span><span class='line'><span class="sr">  # Split [Splitter]</span>
</span><span class='line'><span class="sr">  #</span>
</span><span class='line'><span class="sr">  # Split the backup file in to chunks of 250 megabytes</span>
</span><span class='line'><span class="sr">  # if the backup file size exceeds 250 megabytes</span>
</span><span class='line'><span class="sr">  #</span>
</span><span class='line'><span class="sr">  split_into_chunks_of 250</span>
</span><span class='line'>
</span><span class='line'><span class="sr">  ##</span>
</span><span class='line'><span class="sr">  # PostgreSQL [Database]</span>
</span><span class='line'><span class="sr">  #</span>
</span><span class='line'><span class="sr">  database PostgreSQL do |db|</span>
</span><span class='line'><span class="sr">    db.name               = &quot;my_database_name&quot;</span>
</span><span class='line'><span class="sr">    db.username           = &quot;my_username&quot;</span>
</span><span class='line'><span class="sr">    db.password           = &quot;my_password&quot;</span>
</span><span class='line'><span class="sr">    db.host               = &quot;localhost&quot;</span>
</span><span class='line'><span class="sr">    db.port               = 5432</span>
</span><span class='line'><span class="sr">    # db.socket             = &quot;/</span><span class="n">tmp</span><span class="o">/</span><span class="n">pg</span><span class="o">.</span><span class="n">sock</span><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">    # db.additional_options = [&quot;</span><span class="o">-</span><span class="n">xc</span><span class="s2">&quot;, &quot;</span><span class="o">-</span><span class="n">E</span><span class="o">=</span><span class="n">utf8</span><span class="s2">&quot;]</span>
</span><span class='line'><span class="s2">    # Optional: Use to set the location of this utility</span>
</span><span class='line'><span class="s2">    #   if it cannot be found by name in your $PATH</span>
</span><span class='line'><span class="s2">    # db.pg_dump_utility = &quot;</span><span class="o">/</span><span class="n">opt</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">pg_dump</span><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">  end</span>
</span><span class='line'>
</span><span class='line'><span class="s2">  ##</span>
</span><span class='line'><span class="s2">  # FTP (File Transfer Protocol) [Storage]</span>
</span><span class='line'><span class="s2">  #</span>
</span><span class='line'><span class="s2">  store_with FTP do |server|</span>
</span><span class='line'><span class="s2">    server.username     = &quot;</span><span class="n">my_username</span><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">    server.password     = &quot;</span><span class="n">my_password</span><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">    server.ip           = &quot;</span><span class="mi">1</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">4</span><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">    server.port         = 21</span>
</span><span class='line'><span class="s2">    server.path         = &quot;</span><span class="o">~</span><span class="sr">/backups/</span><span class="s2">&quot;</span>
</span><span class='line'><span class="s2">    server.keep         = 5</span>
</span><span class='line'><span class="s2">    server.passive_mode = false</span>
</span><span class='line'><span class="s2">  end</span>
</span><span class='line'>
</span><span class='line'><span class="s2">  ##</span>
</span><span class='line'><span class="s2">  # Bzip2 [Compressor]</span>
</span><span class='line'><span class="s2">  #</span>
</span><span class='line'><span class="s2">  compress_with Bzip2</span>
</span><span class='line'>
</span><span class='line'><span class="s2">end</span>
</span><span class='line'><span class="s2">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Fairly straight forward refinement are needed, usernames, passwords,... After adding all
the secret stuff, the backup can be called as easy as:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>backup perform --trigger miguest_backup
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:26<span class="o">][</span>message<span class="o">]</span> Performing Backup <span class="k">for</span> <span class="s1">&#39;Description for miguest_backup (miguest_backup)&#39;</span>!
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:26<span class="o">][</span>message<span class="o">]</span> <span class="o">[</span> backup 3.0.25 : ruby 1.9.3p194 <span class="o">(</span>2012-04-20 revision 35410<span class="o">)</span> <span class="o">[</span>x86_64-linux<span class="o">]</span> <span class="o">]</span>
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:26<span class="o">][</span>message<span class="o">]</span> Database::PostgreSQL started dumping and archiving <span class="s1">&#39;miguest&#39;</span>.
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:26<span class="o">][</span>message<span class="o">]</span> Using Compressor::Bzip2 <span class="k">for </span>compression.
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:26<span class="o">][</span>message<span class="o">]</span>   Command: <span class="s1">&#39;/bin/bzip2&#39;</span>
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:26<span class="o">][</span>message<span class="o">]</span>   Ext: <span class="s1">&#39;.bz2&#39;</span>
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:28<span class="o">][</span>message<span class="o">]</span> Database::PostgreSQL Complete!
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:28<span class="o">][</span>message<span class="o">]</span> Packaging the backup files...
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:28<span class="o">][</span>message<span class="o">]</span> Splitter configured with a chunk size of 250MB.
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:28<span class="o">][</span>message<span class="o">]</span> Packaging Complete!
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:28<span class="o">][</span>message<span class="o">]</span> Cleaning up the temporary files...
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:29<span class="o">][</span>message<span class="o">]</span> Storage::FTP started transferring <span class="s1">&#39;2012.10.10.12.21.26.miguest_backup.tar&#39;</span> to <span class="s1">&#39;ftp.services.buyvm.net&#39;</span>.
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:29<span class="o">][</span>message<span class="o">]</span> Storage::FTP: Cycling Started...
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:29<span class="o">][</span>message<span class="o">]</span> Storage::FTP: Cycling Complete!
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:29<span class="o">][</span>message<span class="o">]</span> Cleaning up the package files...
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:29<span class="o">][</span>warning<span class="o">]</span> Backup <span class="k">for</span> <span class="s1">&#39;Description for miguest_backup (miguest_backup)&#39;</span> Completed Successfully <span class="o">(</span>with Warnings<span class="o">)</span> in 00:00:03
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>But there is more to backup gem</h3>

<p>Really, what I'm using for backup is just minimal what backup gem can offer, here is detailed
impressive list of backup features:</p>

<h4>Databases</h4>

<p>MySQL, PostgreSQL, MongoDB, Redis, Riak</p>

<h4>Compression</h4>

<p>bzip2, gzip, lzma, pbzip2</p>

<h4>Storages</h4>

<p>cloudfiles, Dropbox, FTP, local, ninefold, rsync, S3, scp, SFTP</p>

<h4>Notifiers</h4>

<p>campfire, hipchat, mail, presently, prowl, twitter</p>

<h4>Encryption</h4>

<p>GPG, OpenSSL</p>

<h2>Scheduling the backups with whenever Gem</h2>

<p><a href="https://github.com/javan/whenever">Whenever</a> is a Ruby gem that provides a clear syntax for
writing and deploying cron jobs. And this is what I need to schedule the backups to run everyday.</p>

<h3>Install</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install whenever
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Configure (Wheneverize)</h3>

<p>Configure the whenever, but first make sure that we are in backup folder <code>~/Backup</code></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> ~/Backup
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Then create config folder:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir config
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And then run the command:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wheneverize .
</span><span class='line'>~ <span class="o">[</span>add<span class="o">]</span> writing <span class="s1">&#39;./config/schedule.rb&#39;</span>
</span><span class='line'>~ <span class="o">[</span><span class="k">done</span><span class="o">]</span> wheneverized!
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Open the <code>config/schedule.rb</code> file and add the following:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>whenever schedule config - config/schedule.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">every</span> <span class="mi">1</span><span class="o">.</span><span class="n">day</span><span class="p">,</span> <span class="ss">:at</span> <span class="o">=&gt;</span> <span class="s1">&#39;4:30 am&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">command</span> <span class="s2">&quot;backup perform --trigger miguest_backup&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Schedule to crontab</h3>

<p>Run <code>whenever</code> with no arguments see the <code>crontab</code> entry this will create:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>whenever
</span><span class='line'>30 4 * * * /bin/bash -l -c <span class="s1">&#39;backup perform --trigger miguest_backup&#39;</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h2&gt;<span class="o">[</span>message<span class="o">]</span> Above is your schedule file converted to cron syntax; your crontab file was not updated.&lt;/h2&gt;
</span><span class='line'>
</span><span class='line'>&lt;h2&gt;<span class="o">[</span>message<span class="o">]</span> Run <span class="sb">`</span>whenever --help<span class="err">&#39;</span> <span class="k">for </span>more options.&lt;/h2&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>To write (or update) this job in your <code>crontab</code>, use:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>whenever --update-crontab
</span><span class='line'>~ <span class="o">[</span>write<span class="o">]</span> crontab file written
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And that's it, so what is included:</p>

<ul>
<li>Backup of postgres database.</li>
<li>Sending compressed backup via FTP.</li>
<li>Scheduled backup every day at 4:30 am.</li>
</ul>

]]></content>
  </entry>
  
</feed>
