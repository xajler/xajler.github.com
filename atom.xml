<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Learn-a-holic Geek Notes]]></title>
  <link href="http://learnaholic.me/atom.xml" rel="self"/>
  <link href="http://learnaholic.me/"/>
  <updated>2012-10-23T05:35:05+02:00</updated>
  <id>http://learnaholic.me/</id>
  <author>
    <name><![CDATA[Kornelije Sajler]]></name>
    <email><![CDATA[xajler@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails App from Scratch: Simple Authentication]]></title>
    <link href="http://learnaholic.me/2012/10/23/rails-app-from-scratch-simple-authentication/"/>
    <updated>2012-10-23T05:25:00+02:00</updated>
    <id>http://learnaholic.me/2012/10/23/rails-app-from-scratch-simple-authentication</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails App from Scratch: Create and Configure for Testing]]></title>
    <link href="http://learnaholic.me/2012/10/19/rails-app-from-scratch-create-and-configure-testing/"/>
    <updated>2012-10-19T06:28:00+02:00</updated>
    <id>http://learnaholic.me/2012/10/19/rails-app-from-scratch-create-and-configure-testing</id>
    <content type="html"><![CDATA[<p>This blog post will be one many showing how to create <em>Todo</em> the <em>Rails 3</em> application.
The first post will be creating the Rails application and setting up the testing environment.</p>

<p> The app will be called <em>Just ToDo it</em>, just as famous
 <a href="https://en.wikipedia.org/wiki/Just_Do_It_(Nike)" target="_blank">Nike slogan</a>. And also Gods of DNS where
 good to me so the <em>Domain</em> <code>justtodoit.com</code> is free so I bought it and the final stage of this
 Rails posts will be deployment to <em>VPS</em> and pointing to the domain <a href="http://justtodoit.com">JustToDoIt</a>
 (Currently displays my domain <a href="http://metaintellect.com">metaintellect</a>).</p>

<h2>Create application</h2>

<p>The command to create new Rails application and omitting default testing framework <em>Unit::Test</em>
with switch <code>-T</code> or longer version is <code>--skip-test-unit</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails new JustToDoIt -T
</span><span class='line'>create
</span><span class='line'>create  README.rdoc
</span><span class='line'>create  Rakefile
</span><span class='line'>create  config.ru
</span><span class='line'>create  .gitignore
</span><span class='line'>create  Gemfile
</span><span class='line'>create  app
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>I had capitalized <code>JustToDoIt</code> before, because the name is used as Ruby class and Pascal case is convention
for Ruby classes.</p>

<p>Then rename folder to <code>just-todo-it</code> to be more in *nix folder naming convention:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mv JustToDoIt just-todo-it
</span></code></pre></td></tr></table></div></figure>


<p>The fun starts when the directory is changed to Rails app directory:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>just-todo-it
</span></code></pre></td></tr></table></div></figure>


<h2>Text editor</h2>

<p>I&#8217;ll use <em>vim</em> as a default text editor, for <em>TextMate</em> use <code>mate</code> and for the <em>Sublime Text 2</em> use
<code>subl</code> terminal commands for editing files instead of <code>vim</code>.</p>

<h2>Gemfile</h2>

<p>First open the <code>Gemfile</code>, we need to add some <em>gems</em> that will be used in the app and also
for testing:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim Gemfile
</span></code></pre></td></tr></table></div></figure>


<p>Edit it to include this gems:</p>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">source</span> <span class="s1">&#39;https://rubygems.org&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;rails&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;bcrypt-ruby&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;unicorn&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;haml&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;thin&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;pg&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">group</span> <span class="ss">:test</span><span class="p">,</span> <span class="ss">:development</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;sqlite3&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;rspec-rails&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;pry&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;factory_girl_rails&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;database_cleaner&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;awesome_print&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;capybara&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;rb-fsevent&#39;</span><span class="p">,</span> <span class="ss">:require</span> <span class="o">=&gt;</span> <span class="kp">false</span> <span class="k">if</span> <span class="no">RUBY_PLATFORM</span> <span class="o">=~</span> <span class="sr">/darwin/i</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;guard-rspec&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;spork&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;guard-spork&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">group</span> <span class="ss">:assets</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;sass-rails&#39;</span><span class="p">,</span>   <span class="s1">&#39;~&gt; 3.2.3&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;coffee-rails&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 3.2.1&#39;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;uglifier&#39;</span><span class="p">,</span> <span class="s1">&#39;&gt;= 1.0.3&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;jquery-rails&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>After changing the <code>Gemfile</code> run <em>bundler</em> to update and download entered <em>gems</em>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle install
</span></code></pre></td></tr></table></div></figure>


<h3>Main and Production Ruby Gems</h3>

<ul>
<li><a href="http://rubyonrails.org/">rails</a> - The latest one <code>3.2.8</code> for this time of writing.</li>
<li><a href="https://github.com/codahale/bcrypt-ruby">bcrypt-ruby</a> - Needed for password hashing.</li>
<li><a href="https://github.com/defunkt/unicorn">unicorn</a> - For production, it will run as <a href="https://github.com/rack/rack">Rack</a> HTTP Server.</li>
<li><a href="http://haml.info/">haml</a> - My favorite View rendering engine.</li>
<li><a href="http://code.macournoyer.com/thin/">thin</a> - <em>Thin</em> as local server instead of default <em>Webrick</em>.</li>
<li><a href="https://bitbucket.org/ged/ruby-pg">pg</a> - My default database for production usage.</li>
</ul>


<h3>Test and Development Ruby Gems</h3>

<ul>
<li><a href="https://github.com/luislavena/sqlite3-ruby">sqlite3</a> - The database used for development and testing environments.</li>
<li><a href="https://www.relishapp.com/rspec/rspec-rails/docs">rspec-rails</a> - RSpec as default testing framework.</li>
<li><a href="http://pryrepl.org/">pry</a> - Using as default <em>Interactive Ruby</em> console instead of <code>irb</code>. Needs some configuration to be hooked as <code>rails console</code>.</li>
<li><a href="https://github.com/thoughtbot/factory_girl/blob/master/GETTING_STARTED.md">factory_girl_rails</a> - The testing factory framework, used instead of the default <em>Fixtures</em>.</li>
<li><a href="https://github.com/bmabey/database_cleaner">database_cleaner</a> - Used to speed-up tests, in my case to encapsulate the tests into db transaction.</li>
<li><a href="https://github.com/michaeldv/awesome_print">awesome_print</a> - Used by <em>Pry</em> to pretty prints Ruby objects in full color exposing their internal structure with proper indentation.</li>
<li><a href="http://jnicklas.github.com/capybara/">capybara</a> - for simulating the web interaction in the tests.</li>
<li><a href="https://github.com/guard/guard-rspec">guard-rspec</a> - To refresh and run the tests upon saving via <a href="https://github.com/thibaudgg/rb-fsevent">rb-fsevent</a>.</li>
<li><a href="https://github.com/sporkrb/spork">spork</a> - The server to speed up tests, how?, see provided link.</li>
<li><a href="https://github.com/guard/guard-spork">guard-spork</a> - Refreshes the spork server on changes, so that we don&#8217;t need to.</li>
</ul>


<h2>Testing configuration</h2>

<h3>RSpec</h3>

<p><em>RSpec</em> will be used as the test framework for the <code>Just ToDo it</code> app.</p>

<p>Run generator to install <em>RSpec</em> to <em>Rails</em>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails g rspec:install
</span><span class='line'>create  .rspec
</span><span class='line'>create  spec
</span><span class='line'>create  spec/spec_helper.rb
</span></code></pre></td></tr></table></div></figure>


<h3>Guard</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>guard init
</span><span class='line'>rspec guard added to Guardfile, feel free to edit it
</span><span class='line'>spork guard added to Guardfile, feel free to edit it
</span></code></pre></td></tr></table></div></figure>


<p>Configure <code>Guardfile</code> set the <em>Spork</em> on top and <em>RSpec</em> in bottom:</p>

<figure class='code'><figcaption><span>Guardfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">guard</span> <span class="s1">&#39;spork&#39;</span><span class="p">,</span> <span class="ss">:cucumber_env</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="s1">&#39;RAILS_ENV&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;test&#39;</span> <span class="p">},</span> <span class="ss">:rspec_env</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="s1">&#39;RAILS_ENV&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;test&#39;</span> <span class="p">}</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">watch</span><span class="p">(</span><span class="s1">&#39;config/application.rb&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">watch</span><span class="p">(</span><span class="s1">&#39;config/environment.rb&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">watch</span><span class="p">(</span><span class="sr">%r{^config/environments/.+\.rb$}</span><span class="p">)</span>
</span><span class='line'>  <span class="n">watch</span><span class="p">(</span><span class="sr">%r{^config/initializers/.+\.rb$}</span><span class="p">)</span>
</span><span class='line'>  <span class="n">watch</span><span class="p">(</span><span class="s1">&#39;spec/spec_helper.rb&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">watch</span><span class="p">(</span><span class="sr">%r{^spec/support/.+\.rb$}</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">guard</span> <span class="s1">&#39;rspec&#39;</span><span class="p">,</span> <span class="n">cli</span><span class="p">:</span> <span class="s2">&quot;--drb&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Spork</h3>

<p>Bootstrap the <em>Spork</em>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>spork --bootstrap
</span><span class='line'>Using RSpec
</span><span class='line'>Bootstrapping /Users/xajler/src/rb/just-todo-it/spec/spec_helper.rb.
</span><span class='line'>Done. Edit /Users/xajler/src/rb/just-todo-it/spec/spec_helper.rb now with your favorite text editor and follow the instructions.
</span></code></pre></td></tr></table></div></figure>


<h3>RSpec Helper</h3>

<p>Edit RSpec helper:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim spec/spec_helper.rb
</span></code></pre></td></tr></table></div></figure>


<p>And edit to include this content:</p>

<figure class='code'><figcaption><span>spec_helper.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rubygems&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;spork&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="no">Spork</span><span class="o">.</span><span class="n">prefork</span> <span class="k">do</span>
</span><span class='line'>  <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;RAILS_ENV&quot;</span><span class="o">]</span> <span class="o">||=</span> <span class="s1">&#39;test&#39;</span>
</span><span class='line'>  <span class="nb">require</span> <span class="no">File</span><span class="o">.</span><span class="n">expand_path</span><span class="p">(</span><span class="s2">&quot;../../config/environment&quot;</span><span class="p">,</span> <span class="bp">__FILE__</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">require</span> <span class="s1">&#39;rspec/rails&#39;</span>
</span><span class='line'>  <span class="nb">require</span> <span class="s1">&#39;capybara/rspec&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">Dir</span><span class="o">[</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;spec/support/**/*.rb&quot;</span><span class="p">)</span><span class="o">].</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="nb">require</span> <span class="n">f</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">RSpec</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>    <span class="n">config</span><span class="o">.</span><span class="n">mock_with</span> <span class="ss">:rspec</span>
</span><span class='line'>    <span class="n">config</span><span class="o">.</span><span class="n">include</span> <span class="no">FactoryGirl</span><span class="o">::</span><span class="no">Syntax</span><span class="o">::</span><span class="no">Methods</span>
</span><span class='line'>    <span class="n">config</span><span class="o">.</span><span class="n">use_transactional_fixtures</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>    <span class="n">config</span><span class="o">.</span><span class="n">infer_base_class_for_anonymous_controllers</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'>    <span class="n">config</span><span class="o">.</span><span class="n">order</span> <span class="o">=</span> <span class="s2">&quot;random&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">config</span><span class="o">.</span><span class="n">before</span> <span class="ss">:suite</span> <span class="k">do</span>
</span><span class='line'>      <span class="no">DatabaseCleaner</span><span class="o">.</span><span class="n">strategy</span> <span class="o">=</span> <span class="ss">:transaction</span>
</span><span class='line'>      <span class="no">DatabaseCleaner</span><span class="o">.</span><span class="n">clean_with</span><span class="p">(</span><span class="ss">:truncation</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">config</span><span class="o">.</span><span class="n">before</span> <span class="k">do</span>
</span><span class='line'>      <span class="no">DatabaseCleaner</span><span class="o">.</span><span class="n">start</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">config</span><span class="o">.</span><span class="n">after</span> <span class="k">do</span>
</span><span class='line'>      <span class="no">DatabaseCleaner</span><span class="o">.</span><span class="n">clean</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Spork</span><span class="o">.</span><span class="n">each_run</span> <span class="k">do</span>
</span><span class='line'>  <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">reload</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>It uses <em>Spork</em> server and the aim is to have most things in <code>prefork</code> block where is
stuff run on load of <em>Spork</em>.</p>

<p>In <code>each_run</code> block we want put only necessary things, because it runs each time,
we are now having only reloading of <em>Factory Girl</em> factories, but maybe we will add something
from <code>prefork</code> if we would have some troubles with testing data.</p>

<p><em>DatabaseCleaner</em> is used to start, on before and clean it, on after running.
The strategy used for <em>DatabaseCleaner</em> is transaction, meaning to rollback
changes after the transaction queries are finished.</p>

<h3>Run Guard</h3>

<p>The testing environment is now configured, the <em>Guard</em> can be run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>guard
</span><span class='line'>uard could not detect any of the supported notification libraries.
</span><span class='line'>Guard is now watching at <span class="s1">&#39;/Users/xajler/src/rb/just-todo-it&#39;</span>
</span><span class='line'>Starting Spork <span class="k">for </span>RSpec
</span><span class='line'>Using RSpec
</span><span class='line'>Preloading Rails environment
</span><span class='line'>Loading Spork.prefork block...
</span><span class='line'>Spork is ready and listening on 8989!
</span><span class='line'>Spork server <span class="k">for </span>RSpec successfully started
</span><span class='line'>Guard::RSpec is running
</span><span class='line'>Running all specs
</span><span class='line'>Running tests with args <span class="o">[</span><span class="s2">&quot;--drb&quot;</span>, <span class="s2">&quot;-f&quot;</span>, <span class="s2">&quot;progress&quot;</span>, <span class="s2">&quot;-r&quot;</span>, <span class="s2">&quot;/Users/xajler/.rbenv/versions/1.9.3-p194/lib/ruby/gems/1.9.1/gems/guard-rspec-2.1.0/lib/guard/rspec/formatter.rb&quot;</span>, <span class="s2">&quot;-f&quot;</span>, <span class="s2">&quot;Guard::RSpec::Formatter&quot;</span>, <span class="s2">&quot;--out&quot;</span>, <span class="s2">&quot;/dev/null&quot;</span>, <span class="s2">&quot;--failure-exit-code&quot;</span>, <span class="s2">&quot;2&quot;</span>, <span class="s2">&quot;spec&quot;</span><span class="o">]</span>...
</span><span class='line'>No examples found.
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Finished in 0.11748 seconds
</span><span class='line'>0 examples, 0 failures
</span><span class='line'>
</span><span class='line'>Randomized with seed 7715
</span><span class='line'>
</span><span class='line'>Done.
</span></code></pre></td></tr></table></div></figure>


<p>or use <code>bundle exec guard</code> to remove displayed warning.</p>

<p>To exit or stop the <code>guard</code> command use <code>Ctrl+C</code>.</p>

<h2>Pry as Rails Console</h2>

<p>And for the end we will set <em>Pry</em> as our default <em>Interactive Ruby</em> console.</p>

<p>Open the <code>development.rb</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim config/enironments/development.rb
</span></code></pre></td></tr></table></div></figure>


<p>At the end of source file add code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">silence_warnings</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">require</span> <span class="s1">&#39;pry&#39;</span>
</span><span class='line'>  <span class="no">IRB</span> <span class="o">=</span> <span class="no">Pry</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Try it out with <code>.pwd</code> and close the <em>Pry</em> with <code>exit</code> command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails c
</span><span class='line'>Loading development environment <span class="o">(</span>Rails 3.2.8<span class="o">)</span>
</span><span class='line'>1.9.3 <span class="o">(</span>main<span class="o">)</span>:0 &gt; .pwd
</span><span class='line'>/Users/xajler/src/rb/just-todo-it
</span><span class='line'>1.9.3 <span class="o">(</span>main<span class="o">)</span>:0 &gt; <span class="nb">exit</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Commit Source</h2>

<p>First remove the <code>README.rdoc</code> file and create markdown <code>README.md</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rm README.rdoc
</span><span class='line'><span class="nv">$ </span>vim README.md
</span></code></pre></td></tr></table></div></figure>


<p>Add simple description:</p>

<figure class='code'><figcaption><span>README.md</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>The simple ToDo Rails App!
</span></code></pre></td></tr></table></div></figure>


<h3>Initialize</h3>

<p>Initialize the <em>git</em> repository:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git init
</span><span class='line'>Initialized empty Git repository in /Users/xajler/src/rb/just-todo-it/.git/
</span></code></pre></td></tr></table></div></figure>


<h3>Status</h3>

<p>See the status:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git status
</span><span class='line'><span class="c"># On branch master</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># Initial commit</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># Untracked files:</span>
</span><span class='line'><span class="c"># .gitignore</span>
</span><span class='line'><span class="c"># .rspec</span>
</span><span class='line'><span class="c"># Gemfile</span>
</span><span class='line'><span class="c"># Gemfile.lock</span>
</span><span class='line'><span class="c"># Guardfile</span>
</span><span class='line'><span class="c"># README.md</span>
</span><span class='line'><span class="c"># Rakefile</span>
</span><span class='line'><span class="c"># app/</span>
</span><span class='line'><span class="c"># config.ru</span>
</span><span class='line'><span class="c"># config/</span>
</span><span class='line'><span class="c"># db/</span>
</span><span class='line'><span class="c"># doc/</span>
</span><span class='line'><span class="c"># lib/</span>
</span><span class='line'><span class="c"># log/</span>
</span><span class='line'><span class="c"># public/</span>
</span><span class='line'><span class="c"># script/</span>
</span><span class='line'><span class="c"># spec/</span>
</span><span class='line'><span class="c"># vendor/</span>
</span><span class='line'>nothing added to commit but untracked files present
</span></code></pre></td></tr></table></div></figure>


<h3>Add</h3>

<p>Then add all files:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git add .
</span><span class='line'><span class="c"># On branch master</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># Initial commit</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># Changes to be committed:</span>
</span><span class='line'><span class="c"># new file:   .gitignore</span>
</span><span class='line'><span class="c"># new file:   .rspec</span>
</span><span class='line'><span class="c"># new file:   Gemfile</span>
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<h3>Commit</h3>

<p>Commit the files to local repository:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git commit -m <span class="s1">&#39;Initial Commit. Created initial Rails app, added all needed Gems, testing configured&#39;</span>
</span><span class='line'><span class="o">[</span>master <span class="o">(</span>root-commit<span class="o">)</span> e4517a6<span class="o">]</span> Initial Commit. Created initial Rails app, added all needed Gems, testing configured
</span><span class='line'> 38 files changed, 1086 insertions<span class="o">(</span>+<span class="o">)</span>
</span><span class='line'> create mode 100644 .gitignore
</span><span class='line'> create mode 100644 .rspec
</span><span class='line'> create mode 100644 Gemfile
</span></code></pre></td></tr></table></div></figure>


<h3>Set Github Remote</h3>

<p>The app will be on <em>Github</em>. So after the new repository is created on <em>Github</em>, we can add
remote to the local repository:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git remote add origin git@github.com:xajler/just-todo-it.git
</span></code></pre></td></tr></table></div></figure>


<h3>Push to the Github</h3>

<p>After we add remote, it is now safe to push changes to <em>Github</em> remote repository:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git push -u origin master
</span><span class='line'>Counting objects: 63, <span class="k">done</span>.
</span><span class='line'>Delta compression using up to 4 threads.
</span><span class='line'>Compressing objects: 100% <span class="o">(</span>47/47<span class="o">)</span>, <span class="k">done</span>.
</span><span class='line'>Writing objects: 100% <span class="o">(</span>63/63<span class="o">)</span>, 23.32 KiB, <span class="k">done</span>.
</span><span class='line'>Total 63 <span class="o">(</span>delta 2<span class="o">)</span>, reused 0 <span class="o">(</span>delta 0<span class="o">)</span>
</span><span class='line'>To git@github.com:xajler/just-todo-it.git
</span><span class='line'> * <span class="o">[</span>new branch<span class="o">]</span>      master -&gt; master
</span><span class='line'>Branch master <span class="nb">set </span>up to track remote branch master from origin.
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Github xajler/just-todo-it commit:</p>

<p><a href="https://github.com/xajler/just-todo-it/commit/e4517a6390f912850c63cc60085cbd57770d22ed">Initial Commit. Created initial Rails app, added all needed Gems, testing configured</a></p></blockquote>

<h2>Conclusion</h2>

<p>It this first part we have created a <code>JustToDoIt</code> Rails application.</p>

<p>And because we shall use <em>TDD</em> (Test Driven Development) to drive this app, we first
configure the testing environment including:</p>

<ul>
<li>RSpec</li>
<li>Factory Girl</li>
<li>Database Cleaner</li>
<li>Guard</li>
<li>Spork</li>
</ul>


<p>And for the end we setup the <em>Pry</em> to be a default for <em>Rails</em> console and commit the
source to the <em>Github</em> repository <a href="https://github.com/xajler/just-todo-it">xajler/just-todo-it</a>.</p>

<p>In second post we shall go with the creating the app logic in <em>TDD</em> manner!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress SEO and disabling the blog route]]></title>
    <link href="http://learnaholic.me/2012/10/15/octopress-seo-and-disabling-the-blog-route/"/>
    <updated>2012-10-15T08:36:00+02:00</updated>
    <id>http://learnaholic.me/2012/10/15/octopress-seo-and-disabling-the-blog-route</id>
    <content type="html"><![CDATA[<p>The SEO on Octopress by default is moderate, but it can be better, too bad that the <code>rake new_post</code>
doesn&#8217;t generate <em>Meta description</em> and the <em>keywords</em>. The other problem is
redirect to single page which is broken since there is <em>learnaholic.me</em> and <em>www.learnaholic.me</em>
which can affect site ranking.</p>

<p>The third problem is that Octopress by default has a <code>&lt;domain&gt;/blog</code> route path which is awkward
and unnecessary, domain is sufficient enough without <code>/blog</code>.</p>

<p>The most SEO fixes are from the <a href="http://www.yatishmehta.in/seo-for-octopress">SEO for Octopress,Heroku</a>
post by Yatish Mehta.</p>

<h2>Keywords and Description for every page</h2>

<p>The provided <em>keywords</em> and <em>description</em> should be a goal for each page, the problem is
that <code>rake new_post</code> doesn&#8217;t generate <em>keywords</em> and <em>description</em>, so it should be added
manually.</p>

<p>I&#8217;ve added the <em>keywords</em> and <em>description</em> to all my posts created in this few days
and the post Octopress metadata looks like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---
</span><span class='line'>layout: post
</span><span class='line'>title: "Make Powershell, SSH Github and git suck less on Windows"
</span><span class='line'>date: 2012-10-12 03:41
</span><span class='line'>comments: true
</span><span class='line'>categories: [powershell, git, github]
</span><span class='line'>keywords: powershell, git, github, windows, ssh key, posh-git, msysgit
</span><span class='line'>description: Installing the msysgit, configuring git, creating SSH keys for Github, customize the Powershell, installing posh-git. Windows suck less after.
</span><span class='line'>---</span></code></pre></td></tr></table></div></figure>


<h2>Home page Keywords and Description</h2>

<p>The Octopress by default shows latest post as home page, I choose not to go this way, my
default home page is archive list. So there is no post from where it should include the
<em>keywords</em> and <em>description</em>.</p>

<h3>Setting Keywords and Description for Home page in _config.yml</h3>

<p>Open the <code>_config.yml</code> and add the <em>kewords</em> and <em>description</em> keys:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>description: Kornelije Sajler (xajler) Learn-a-holic Geek Notes. Human compiled Brainwork by Kornelije Sajler (xajler).
</span><span class='line'>keywords: Kornelije Sajler, xajler, metaintellect, learnaholic, learn-a-holic, coding, programming, Ruby, Ruby On Rails, RSpec TDD, cucumber, jasmine, bacbone.js, postgresql, mongodb</span></code></pre></td></tr></table></div></figure>


<h3>Change head.html template to be aware of Home page SEO</h3>

<p>In <code>.themes/classic/source/_includes/head.html</code> after meta tag for <code>author</code> replace the
current <em>description</em>/<em>keywords</em> code with this one:</p>

<div><script src='https://gist.github.com/2460469.js?file='></script>
<noscript><pre><code>&lt;meta name=&quot;author&quot; content=&quot;{{ site.author }}&quot;&gt;
{% capture description %}{% if page.description %}{{ page.description }}{% elsif site.description %}{{ site.description }}{%else%}{{ content | raw_content }}{% endif %}{% endcapture %}
&lt;meta name=&quot;description&quot; content=&quot;{{ description | strip_html | condense_spaces | truncate:150 }}&quot;&gt;
{% if page.keywords %}&lt;meta name=&quot;keywords&quot; content=&quot;{{ page.keywords }}&quot;&gt;{%else%}&lt;meta name=&quot;keywords&quot; content=&quot;{{ site.keywords }}&quot;&gt;{% endif %}
</code></pre></noscript></div>


<h2>Single domain rewrite</h2>

<p>To make sure that there is no differnce between <em>learnaholic.me</em> and <em>www.learnaholic.me</em>
request, we shall include rewriting with <em>gem rack-rewrite</em>.</p>

<p>To Octopress <em>Gemfile</em> add:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem 'rack-rewrite'</span></code></pre></td></tr></table></div></figure>


<p>To top of <code>config.ru</code> (before <code>SinatraStaticServer</code>) add:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;RACK_ENV&#39;</span><span class="o">]</span> <span class="o">||=</span> <span class="s1">&#39;development&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;SITE_URL&#39;</span><span class="o">]</span> <span class="o">||=</span> <span class="s1">&#39;www.learnaholic.me&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">use</span> <span class="no">Rack</span><span class="o">::</span><span class="no">Rewrite</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">r301</span> <span class="sr">%r{.*}</span><span class="p">,</span> <span class="s2">&quot;http://</span><span class="si">#{</span><span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;SITE_URL&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">$&amp;&quot;</span><span class="p">,</span> <span class="ss">:if</span> <span class="o">=&gt;</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="o">|</span><span class="n">rack_env</span><span class="o">|</span>
</span><span class='line'>      <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;RACK_ENV&#39;</span><span class="o">]</span> <span class="o">==</span> <span class="s1">&#39;production&#39;</span> <span class="o">&amp;&amp;</span> <span class="n">rack_env</span><span class="o">[</span><span class="s1">&#39;SERVER_NAME&#39;</span><span class="o">]</span> <span class="o">!=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;SITE_URL&#39;</span><span class="o">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="n">r301</span> <span class="sr">%r{^(.+)/$}</span><span class="p">,</span> <span class="s1">&#39;$1&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Don&#8217;t forget to add a require on the top of the <code>config.ru</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rack-rewrite&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Complete <code>config.ru</code> should look like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;bundler/setup&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;sinatra/base&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;rack-rewrite&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># The project root directory</span>
</span><span class='line'><span class="vg">$root</span> <span class="o">=</span> <span class="o">::</span><span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;RACK_ENV&#39;</span><span class="o">]</span> <span class="o">||=</span> <span class="s1">&#39;development&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;SITE_URL&#39;</span><span class="o">]</span> <span class="o">||=</span> <span class="s1">&#39;www.learnaholic.me&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">use</span> <span class="no">Rack</span><span class="o">::</span><span class="no">Rewrite</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">r301</span> <span class="sr">%r{.*}</span><span class="p">,</span> <span class="s2">&quot;http://</span><span class="si">#{</span><span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;SITE_URL&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">$&amp;&quot;</span><span class="p">,</span> <span class="ss">:if</span> <span class="o">=&gt;</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="o">|</span><span class="n">rack_env</span><span class="o">|</span>
</span><span class='line'>      <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;RACK_ENV&#39;</span><span class="o">]</span> <span class="o">==</span> <span class="s1">&#39;production&#39;</span> <span class="o">&amp;&amp;</span> <span class="n">rack_env</span><span class="o">[</span><span class="s1">&#39;SERVER_NAME&#39;</span><span class="o">]</span> <span class="o">!=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;SITE_URL&#39;</span><span class="o">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="n">r301</span> <span class="sr">%r{^(.+)/$}</span><span class="p">,</span> <span class="s1">&#39;$1&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">SinatraStaticServer</span> <span class="o">&lt;</span> <span class="no">Sinatra</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">get</span><span class="p">(</span><span class="sr">/.+/</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">send_sinatra_file</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">path</span><span class="p">)</span> <span class="p">{</span><span class="mi">404</span><span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">not_found</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">send_sinatra_file</span><span class="p">(</span><span class="s1">&#39;404.html&#39;</span><span class="p">)</span> <span class="p">{</span><span class="s2">&quot;Sorry, I cannot find </span><span class="si">#{</span><span class="n">request</span><span class="o">.</span><span class="n">path</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">send_sinatra_file</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">missing_file_block</span><span class="p">)</span>
</span><span class='line'>    <span class="n">file_path</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">),</span> <span class="s1">&#39;public&#39;</span><span class="p">,</span>  <span class="n">path</span><span class="p">)</span>
</span><span class='line'>    <span class="n">file_path</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">file_path</span><span class="p">,</span> <span class="s1">&#39;index.html&#39;</span><span class="p">)</span> <span class="k">unless</span> <span class="n">file_path</span> <span class="o">=~</span> <span class="sr">/\.[a-z]+$/i</span>
</span><span class='line'>    <span class="no">File</span><span class="o">.</span><span class="n">exist?</span><span class="p">(</span><span class="n">file_path</span><span class="p">)</span> <span class="p">?</span> <span class="n">send_file</span><span class="p">(</span><span class="n">file_path</span><span class="p">)</span> <span class="p">:</span> <span class="n">missing_file_block</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">run</span> <span class="no">SinatraStaticServer</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Set the route without unnecessary /blog route path</h2>

<p>The Octopres by defult has a weird <em>&lt;domain&gt;/blog/2012/10&#8230;</em> route path, the <code>blog</code>
part of URL is totally unnecessary, so I removed it all together.</p>

<p>In <code>_config.yml</code> change:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">permalink</span><span class="p">:</span> <span class="sr">/blog/</span><span class="ss">:year</span><span class="o">/</span><span class="ss">:month</span><span class="o">/</span><span class="ss">:day</span><span class="o">/</span><span class="ss">:title</span><span class="o">/</span>
</span><span class='line'><span class="n">category_dir</span><span class="p">:</span> <span class="n">blog</span><span class="o">/</span><span class="n">categories</span>
</span></code></pre></td></tr></table></div></figure>


<p>to:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">permalink</span><span class="p">:</span> <span class="sr">/:year/</span><span class="ss">:month</span><span class="o">/</span><span class="ss">:day</span><span class="o">/</span><span class="ss">:title</span><span class="o">/</span>
</span><span class='line'><span class="n">category_dir</span><span class="p">:</span> <span class="n">categories</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now the url should look like this:</p>

<pre><code>http://learnaholic.me/2012/10/15/octopress-seo-and-disabling-the-blog-route/
</code></pre>

<p>But by default it would be:</p>

<pre><code>http://learnaholic.me/blog/2012/10/15/octopress-seo-and-disabling-the-blog-route/
</code></pre>

<h2>Conclusion</h2>

<p>Improved SEO of the Octopress site:</p>

<ul>
<li>Including the <em>keywords</em> and <em>description</em> to each post.</li>
<li>Home page is now with <em>keywords</em> and <em>description</em>, generic for the whole site.</li>
<li>Redirect to single domain. The <em>www.learnholic.me</em> request will be redirected to <em>learnaholic.me</em>.</li>
</ul>


<p>The cleaner site path by removing the unnecessary <code>/blog</code> from the URL route.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Make Powershell, SSH Github and git suck less on Windows]]></title>
    <link href="http://learnaholic.me/2012/10/12/make-powershell-and-git-suck-less-on-windows/"/>
    <updated>2012-10-12T03:41:00+02:00</updated>
    <id>http://learnaholic.me/2012/10/12/make-powershell-and-git-suck-less-on-windows</id>
    <content type="html"><![CDATA[<p>There are two Terminals in Windows <em>Command Prompt</em> and <em>Powershell</em>, and they both suck by far.
I can understand that <em>Command Prompt</em> is no good, but why the <em>Powershell</em> wasn&#8217;t done better?!</p>

<p>The things missing in <em>Powershell</em>:</p>

<ul>
<li>Maximizing is just so mid &#8216;90.</li>
<li>History for a session only (So annoying).</li>
<li>Painful adding of Aliases.</li>
<li>Emacs navigation (<code>Ctrl+a</code>,<code>Ctrl+e</code>,&#8230;).</li>
<li>Full screen and Tranparency (Oh I just want too much).</li>
<li>The config dir is in <code>Documents\WindowsPowerShell</code> (WTF).</li>
</ul>


<p>Maybe to most Windows users this is strange because this kind of stuff is never used, but if
you&#8217;re coming from <em>Linux</em> or <em>Mac</em> then the frustration is certain. Because <em>Linux</em> or <em>Mac</em> are
having great Terminal and working in them is just a joy.</p>

<p>The aim of post is to install <em>git</em> on Windowns and then configure it.
Then customize a little bit the <em>Powershell</em> because the defaults are just crime against humanity.
Configure <em>SSH</em> on machine and register <em>SSH</em> key with Github.
Install must-have <a href="https://github.com/dahlbyk/posh-git">posh-git</a> that will add the branch/status
to <em>Powershell</em> prompt plus auto-completion for <em>git</em>.</p>

<p>Note that I&#8217;m using Windows 8 and <em>Powershell</em> version 3.0.</p>

<h2>Git Install</h2>

<p>For those who might don&#8217;t know the <em>git</em> is created by Linus Torvalds the creator of <em>Linux Kernel</em>.
<em>Git</em> was a  product of his frustration maintaining <em>Linux Kernel</em>. He is not really the
huge fan of Windows (nor am I) so <em>git</em> Windows implementation was hard to do because it
really relies on <em>Unix/Linux</em> commands and philosophies that are lacking on Windows.</p>

<p>I know there was a problem I while back with the <a href="http://git-scm.com/downloads">official Git version for Windows</a>
and I was always using the <a href="https://code.google.com/p/msysgit">msysgit</a>,
don&#8217;t know if still is the case but I will use <em>msysgit</em> in this post.</p>

<p>Download the latest <a href="https://code.google.com/p/msysgit/downloads/list">msysgit</a> and install it
with just clicking next few times.  There are few things to configure, but using defaults is safest way.</p>

<blockquote><p>Note:</p>

<p>There is also a <a href="http://windows.github.com/">Github for Windows</a>. Probably even easier way to
install and configure <em>git</em> on Windows, but I like to complicate things.</p></blockquote>

<h2>Add Git to PATH</h2>

<p>By default the <em>git</em> binaries are not set in to PATH, so add it by going to:</p>

<pre><code>Control Panel/System and Security/System/Advanced system settings
</code></pre>

<p>Then in <em>System Properties</em> click on <em>Environment Variables&#8230;</em> and in <em>System Variables</em> list box
scroll to <em>Variable</em> <code>Path</code>, double-click it and add at the end:</p>

<pre><code>;C:\Program Files (x86)\Git\cmd;C:\Program Files (x86)\Git\bin;
</code></pre>

<p>Test that the <em>git</em> is available by opening the <em>Powershell</em>. Easiest way to open te <em>Powershell</em>
(if there is no shortcut) especially in Windows 8 is <code>Win+r</code> and type <code>powershell</code> to prompt.</p>

<p>In <em>Powershell</em> type:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\&gt; git
</span><span class='line'>usage: git [--version] [--exec-path[=&lt;path&gt;]] [--html-path] [--man-path] [--info-path]
</span><span class='line'>           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
</span><span class='line'>           [--git-dir=&lt;path&gt;] [--work-tree=&lt;path&gt;] [--namespace=&lt;name&gt;]
</span><span class='line'>           [-c name=value] [--help]
</span><span class='line'>           &lt;command&gt; [&lt;args&gt;]
</span><span class='line'>
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>If you get something like <em>usage: git</em>, then the <em>git</em> is ready!</p>

<h2>Configure Git</h2>

<p>Set the user name that will be readable in <em>git</em> log or history:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>C:\&gt; git config --global user.name &quot;Kornelije Sajler&quot;
</span></code></pre></td></tr></table></div></figure>


<p>Then set your email:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>C:\&gt; git config --global user.email &quot;xajler@gmail.com&quot;
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Note:</p>

<p>Your email address for Git should be the same one associated with your GitHub account.</p></blockquote>

<h2>Generate SSH key</h2>

<p>With <em>msysgit</em> comes a <em>Git Bash</em> needed to generate <em>SSH</em> keys. If you have one skip this step!</p>

<p>To open <em>Git Bash</em> right-click on any folder in <em>Windows Explorer</em> and choose <em>Git Bash</em>.
In <em>Git Bash</em> enter:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh-keygen -t rsa -C <span class="s2">&quot;xajler@gmail.com&quot;</span>
</span><span class='line'>Generating public/private rsa key pair.
</span><span class='line'>Enter file in which to save the key <span class="o">(</span>/c/Users/Kornelije/.ssh/id_rsa<span class="o">)</span>:
</span></code></pre></td></tr></table></div></figure>


<p>Keygen will ask you for passphrase. In my first attempt I&#8217;ve added one, but on each commit I have to enter
passphrase. That is so annoying.</p>

<p>If you have a <em>SSH</em> key passphrase and it annoys you then enter:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ssh-keygen -p
</span></code></pre></td></tr></table></div></figure>


<p>It will ask you for current passphrase, enter the current passphrasse, and with two enters,
you&#8217;ll now have a blank passphrase!</p>

<h3>Git Bash Copy/Paste</h3>

<p>The copy/paste is so awful in <em>Git Bash</em>. To paste you need to click the icon in top left corner,
go to <code>Edit</code> then <code>Paste</code>.</p>

<p>The copy is even more cumbersome, I&#8217;ll just give you a hint, choose <code>Select All</code>!</p>

<p><img src="http://i47.tinypic.com/kei238.png"></p>

<p>Or read at the end in <em>Options Tab</em> part of <em>Powershell Customization</em> to enable <em>QuickEdit Mode</em>.</p>

<h2>Set SSH key to Github</h2>

<p>To set the public <em>SSH</em> key in <a href="http://github.com">Github</a> there is need for getting it from a
<code>~/.ssh/id_rsa.pub</code>.</p>

<p>Again open <em>Git Bash</em> right-click on any folder in <em>Windows Explorer</em> and choose <em>Git Bash</em>.
In <em>Git Bash</em> enter:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>clip &lt; ~/.ssh/id_rsa.pub
</span></code></pre></td></tr></table></div></figure>


<p>This command will copy your public <em>SSH</em> key to clipboard. Then go to
<a href="https://github.com/settings/ssh">Github / Account Settngs / SSH Keys</a> and click the button
<code>Add SSH Key</code>.</p>

<p>Enter Title (sorry about my title):</p>

<pre><code>win-shit
</code></pre>

<p>Enter Key:</p>

<pre><code>Just paste from clipboard
</code></pre>

<p>By clicking <code>Add Key</code> you have successfully added <em>SSH</em> key to <a href="http://github.com">Github</a> and
the <em>git</em> pushing to <a href="http://github.com">Github</a> is now super easy.</p>

<h2>Powershell customization</h2>

<p>The visual features of <em>Powershell</em> probably didn&#8217;t change since Windows 95, and defaults
are probably still dating from &#8216;95 and selecting, copy, pasting is awkward, hard and unusable!</p>

<h3>Suck less Powershell</h3>

<p>Click the small <em>Powershell</em> icon in top left corner, and in the context menu click on <code>Properties</code>.</p>

<h4>Options Tab</h4>

<p>In <code>Edit Options</code> check the <code>QuickEdit Mode</code>. Quick edit mode enables selecting text from
anywhere in <em>Powershell</em> and with right-click it will copy the selected content.
Also with single right-click pastes the text where the blinking cursor
currently is, similar to <em>putty</em>.</p>

<p>This option really boosts the productivity in <em>Powershell</em>, it is too bad that this is
not set by default!</p>

<h4>Font Tab</h4>

<p>Even we are in 21st century but the <em>Powershell</em> is still set by default to <code>Raster Fonts</code> with
awkward sizes like 16x12, 6x8, that I never really get the meaning of.</p>

<p>In <code>Font</code> list choose the <em>Consolas</em> font (or other available mono-space font) and you can check the
<code>Bold fonts</code> if you like to have bold text. As for <code>Size</code> in list choose whatever you want
I&#8217;ll stick to <code>18</code>.</p>

<h4>Layout Tab</h4>

<p>The <em>Powershell</em> by default is very small, at least to me, maximize is totally unusable, there is
no full screen!</p>

<p><code>Screen Buffer Size</code> and <code>Window Position</code> <em>Width</em> height should be same size if you dont want
to have ugly horizontal scroll bar. I set <em>Width</em> to <code>125</code> and <code>Window Position</code> <em>Height</em> to <code>35</code>.</p>

<p>This are all customization, it is not too much but <em>Powershell</em> suck a little less after it,
but there is a room for lots and lots of improvements, while Microsoft spends time on
useless technologies like <em>Light Switch</em>.</p>

<h2>Posh-Git: Make your Git shine in Powershell</h2>

<p>A set of <em>Powershell</em> scripts which provide <em>Git/PowerShell</em> integration. Includes:</p>

<ul>
<li>Prompt for Git repositories - shows the current branch and the state of files (additions, modifications, deletions) within.</li>
<li>Tab completion for <em>git</em> commands.</li>
</ul>


<h3>Install</h3>

<p>Clone it from <em>Github</em> to any folder, I&#8217;ll clone it in <code>source</code> folder:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>C:\source &gt; git clone git://github.com/dahlbyk/posh-git.git
</span></code></pre></td></tr></table></div></figure>


<p>Verify execution of <em>Powershell</em> scripts is allowed with:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>C:\source &gt; Get-ExecutionPolicy
</span></code></pre></td></tr></table></div></figure>


<p>The result should be <em>RemoteSigned</em>  or <em>Unrestricted</em>.</p>

<p>If scripts are not enabled, run <em>Powershell</em> as Administrator and call:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>C:\source &gt; Set-ExecutionPolicy RemoteSigned -Scope CurrentUser -Confirm
</span></code></pre></td></tr></table></div></figure>


<p>Then <code>cd</code> to <code>posh-git</code> folder and run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>C:\source\posh-git &gt; .\install.ps1
</span><span class='line'>Creating PowerShell profile...
</span><span class='line'>D:\MyData\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1
</span><span class='line'>Adding posh-git to profile...
</span><span class='line'>posh-git successfully installed!
</span><span class='line'>Please reload your profile for the changes to take effect:
</span><span class='line'>    . $PROFILE
</span></code></pre></td></tr></table></div></figure>


<p>Then reload your profile, as noted in <em>posh-git</em> after install note:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>C:\source\posh-git &gt; . $PROFILE
</span></code></pre></td></tr></table></div></figure>


<p>If you&#8217;re done everything from this post then everything should work just fine!</p>

<p>The outcome of whole post is to have something at the end of the day:</p>

<p><img src="http://i46.tinypic.com/25ian4n.png"></p>

<p>And just for comparison the <em>Terminal iTerm2</em> on my <em>Mac OS X Mountain Lion</em> with <em>zsh shell</em>
and very short aliases, pure awesomeness:</p>

<p><img src="http://i46.tinypic.com/33fggut.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deploying Octopress to Github Pages and setting custom subdomain CNAME]]></title>
    <link href="http://learnaholic.me/2012/10/10/deploying-octopress-to-github-pages-and-setting-custom-subdomain-cname/"/>
    <updated>2012-10-10T23:49:00+02:00</updated>
    <id>http://learnaholic.me/2012/10/10/deploying-octopress-to-github-pages-and-setting-custom-subdomain-cname</id>
    <content type="html"><![CDATA[<p>Blogging was really never easy task for me, I started in 2006 with <a href="http://wordpress.com">WordPress</a> but with short life.
The more about my blogging history can be read in my blog post
<a href="http://www.learnaholic.me/2009/04/26/hello-world/">and finally comes time for Blogging!</a> on my
old blogging site <a href="http://www.learnaholic.me">Learn-a-holic</a>.</p>

<h2>Blog Engines</h2>

<p>So far I was on this blog engines, chronologically:</p>

<ul>
<li><a href="http://wordpress.com">WordPress</a> (2006 - 2008)</li>
<li><a href="https://graffiticms.codeplex.com/">Graffiti CMS</a> (2008)</li>
<li><a href="http://www.dotnetblogengine.net/">BlogEngine.NET</a> (2009)</li>
<li><a href="http://wordpress.com">WordPress</a> (2009 - 2012)</li>
</ul>


<p>So far I was always coming back to <a href="http://wordpress.com">WordPress</a>, but I was never actually satisfied in writing
posts in it, everything other than that is plain perfect on <a href="http://wordpress.com">WordPress</a>.
This is why I haven&#8217;t blogging for nearly two years.</p>

<p>Nowdays I really like <a href="http://daringfireball.net/projects/markdown/">markdown</a>
or any similar kind of markup language (<a href="http://redcloth.org/textile">textile</a>,
<a href="http://www.wikicreole.org/wiki/Home">creole</a>,&#8230;), and
I would prefer writing blog posts with <a href="http://daringfireball.net/projects/markdown/">markdown</a>.
In my case blog posts are more notes than the blog posts,
because they are more technical, and there is lots of code snippets!</p>

<h2>Octopress</h2>

<p><a href="http://octopress.org/">Octopress</a> is the very easy framework on top of <a href="https://github.com/mojombo/jekyll">Jekyll</a>, and
Jekyll is a blog-aware, static site generator in <a href="http://ruby-lang.org">Ruby</a>.</p>

<h3>Install</h3>

<p>The official <a href="http://octopress.org/">Octopress</a> install is just to clone or fork the
<a href="https://github.com/imathis/octopress">Octopress repo</a>. I&#8217;ve chose to do fork then
clone it from my forked repo.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone git@github.com:xajler/octopress.git
</span></code></pre></td></tr></table></div></figure>


<blockquote><p><strong>Notes:</strong></p>

<p>You&#8217;ll need to change the clone to your repository, since there is need for Read+Write access!</p>

<p>I&#8217;m lying a bit the first attempt was a clone, but afterwards I&#8217;ve chose to fork it, why?,
you&#8217;ll need to read about it a little bit later.</p></blockquote>

<h2>Using Octopress with Rake</h2>

<p>The <a href="http://octopress.org/">Octopress</a> uses Jim Weirich&#8217;s great make-like build utility
<a href="https://github.com/jimweirich/rake">Rake</a>,
for creating posts/pages, deploying, generating,&#8230;</p>

<h3>Rake Install</h3>

<p>The <a href="http://octopress.org/">Octopress</a> needs for the first time to generate the sandbox with theme and placeholder
folder for posts. It can be achieved by running (needs to be in forked/cloned directory):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake install
</span><span class='line'><span class="c">## Copying classic theme into ./source and ./sass</span>
</span><span class='line'>mkdir -p <span class="nb">source</span>
</span><span class='line'>cp -r .themes/classic/source/. <span class="nb">source</span>
</span><span class='line'>mkdir -p sass
</span><span class='line'>cp -r .themes/classic/sass/. sass
</span><span class='line'>mkdir -p <span class="nb">source</span>/_posts
</span><span class='line'>mkdir -p public
</span></code></pre></td></tr></table></div></figure>


<p>The command will create <code>source</code> and <code>sass</code> folders. The <code>source/_posts</code> folder is where the markdown
posts will reside.</p>

<p>This is why I forked the <a href="http://octopress.org/">Octopress</a>, so that I can commit the posts as
the markdown files, if I would clone it, I should have the write access to <a href="http://octopress.org/">Octopress</a>,
to commit, this way I have my forked version and still I can always pull changes from
upsteramed original <a href="http://octopress.org/">Octopress</a>, but more of this in separate post.</p>

<h3>Creating first post</h3>

<p>Create post with <code>new_post['post name here']</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake new_post<span class="o">[</span><span class="s1">&#39;Deploying Octopress to Github Pages and setting custom subdomain CNAME&#39;</span><span class="o">]</span>
</span><span class='line'>mkdir -p <span class="nb">source</span>/_posts
</span><span class='line'>Creating new post: <span class="nb">source</span>/_posts/2012-10-10-deploying-octopress-to-github-pages-and-setting-custom-subdomain-cname.markdown
</span></code></pre></td></tr></table></div></figure>


<p>By opening it in your favorite editor you&#8217;ll get:</p>

<figure class='code'><figcaption><span>2012-10-10-deploying-octopress-to-github-pages-and-setting-custom-subdomain-cname.markdown</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>---
</span><span class='line'>layout: post
</span><span class='line'>title: &quot;Deploying Octopress to Github Pages and setting custom subdomain CNAME&quot;
</span><span class='line'>date: 2012-10-11 01:01
</span><span class='line'>comments: true
</span><span class='line'>categories:
</span><span class='line'>---
</span></code></pre></td></tr></table></div></figure>


<p>Categories can be add in few ways, my way is one-liner:</p>

<pre><code>categories: [octopress, github, github pages]
</code></pre>

<h3>Generating the Site</h3>

<p>Add some content to your first post and then run <code>generate</code> command that generates whole site:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake generate
</span><span class='line'><span class="c">## Generating Site with Jekyll</span>
</span><span class='line'>directory <span class="nb">source</span>/stylesheets/
</span><span class='line'>   create <span class="nb">source</span>/stylesheets/screen.css
</span><span class='line'>Configuration from /Users/xajler/src/octopress-orig/_config.yml
</span><span class='line'>Building site: <span class="nb">source</span> -&gt; public
</span><span class='line'>Successfully generated site: <span class="nb">source</span> -&gt; public
</span></code></pre></td></tr></table></div></figure>


<h3>Preview Site</h3>

<p>To locally preview generated Site use:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake preview
</span><span class='line'>Starting to watch <span class="nb">source </span>with Jekyll and Compass. Starting Rack on port 4000
</span><span class='line'><span class="o">[</span>2012-10-11 01:16:08<span class="o">]</span> INFO  WEBrick 1.3.1
</span><span class='line'><span class="o">[</span>2012-10-11 01:16:08<span class="o">]</span> INFO  ruby 1.9.3 <span class="o">(</span>2012-04-20<span class="o">)</span> <span class="o">[</span>x86_64-darwin12.0.0<span class="o">]</span>
</span><span class='line'><span class="o">[</span>2012-10-11 01:16:08<span class="o">]</span> INFO  WEBrick::HTTPServer#start: <span class="nv">pid</span><span class="o">=</span>62929 <span class="nv">port</span><span class="o">=</span>4000
</span><span class='line'>Configuration from /Users/xajler/src/octopress-orig/_config.yml
</span><span class='line'>
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>Then in browser navigate to:</p>

<pre><code>http://localhost:4000/
</code></pre>

<p>The beauty of the <code>preview</code> is that <em>Auto-regenerating</em> is enabled by default.
Meaning every save of blog post file will trigger <code>generate</code> command making it as live preview.</p>

<h3>Configuring the Octopress</h3>

<p>The <a href="http://octopress.org/">Octopress</a> configuration is in the root <code>_config.yml</code> file.</p>

<p>There you can change <code>url</code>, <code>title</code>, <code>subtitle</code>, <code>permalink</code>, <code>twitter account</code>, <code>github account</code>,
and set site comments via <a href="http://disqus.com/">disqus</a> by providing <code>disqus_short_name</code>.</p>

<h2>Deployment</h2>

<p><a href="http://octopress.org/">Octopress</a> supports <a href="http://heroku.com">Heroku</a>, rsync and
<a href="http://pages.github.com">Github Pages</a> deployment.
I chose the <a href="http://pages.github.com">Github Pages</a> because
<a href="http://www.github.com">Github</a> provide the CNAME changes, so the site can be on your desired domain.</p>

<h3>Github Pages setup</h3>

<p>There are two ways of having pages on the <a href="http://www.github.com">Github</a>.</p>

<p>The User/Organization pages <code>http://username.github.com</code> and project pages <code>gh-pages</code>.</p>

<p>The my way was the User/Organization pages.</p>

<h4>Setting up the repository on Github</h4>

<p>Create new repository on <a href="http://www.github.com">Github</a> and named it as your User/Organization name plus <code>.github.com</code>
in my case was <code>xajler.github.com</code>.</p>

<h4>Configure Octopress for Github Pages</h4>

<p>To prepare <a href="http://octopress.org/">Octopress</a> for deployment to <a href="http://pages.github.com">Github Pages</a>
run commannd and write <code>Repository url</code> (<code>git@github.com:xajler/xajler.github.com</code>):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake setup_github_pages
</span><span class='line'>Enter the <span class="nb">read</span>/write url <span class="k">for </span>your repository
</span><span class='line'><span class="o">(</span>For example, <span class="err">&#39;</span>git@github.com:your_username/your_username.github.com<span class="o">)</span>
</span><span class='line'>Repository url: git@github.com:xajler/xajler.github.com
</span><span class='line'>rm -rf _deploy
</span><span class='line'>mkdir _deploy
</span><span class='line'><span class="nb">cd </span>_deploy
</span><span class='line'>Initialized empty Git repository in /Users/xajler/src/octopress-orig/_deploy/.git/
</span><span class='line'><span class="o">[</span>master <span class="o">(</span>root-commit<span class="o">)</span> ac273d4<span class="o">]</span> Octopress init
</span><span class='line'> 1 file changed, 1 insertion<span class="o">(</span>+<span class="o">)</span>
</span><span class='line'> create mode 100644 index.html
</span><span class='line'><span class="nb">cd</span> -
</span><span class='line'>
</span><span class='line'>---
</span><span class='line'><span class="c">## Now you can deploy to http://xajler.github.com with `rake deploy` ##</span>
</span></code></pre></td></tr></table></div></figure>


<p>This command will change <code>git remote origin</code> from <a href="http://octopress.org/">Octopress</a> forked/cloned url to:</p>

<pre><code>git@github.com:xajler/xajler.github.com
</code></pre>

<p>And also add a <code>_deploy</code> folder, actual root of your <a href="http://pages.github.com">Github Pages</a> repository
(<code>github.com/xajler/xajler.github.com</code>).</p>

<h4>Deployment to Github Pages</h4>

<p>The final <code>rake</code> command is <code>deploy</code>. It will create commit and push to <a href="http://www.github.com">Github</a>
repo and you&#8217;ll get notification to your mail.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake deploy
</span><span class='line'><span class="c">## Deploying branch to Github Pages</span>
</span><span class='line'>rm -rf _deploy/index.html
</span><span class='line'>
</span><span class='line'><span class="c">## copying public to _deploy</span>
</span><span class='line'>cp -r public/. _deploy
</span><span class='line'><span class="nb">cd </span>_deploy
</span><span class='line'>
</span><span class='line'><span class="c">## Commiting: Site updated at 2012-10-11 00:14:34 UTC</span>
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p>After deployment in your mail box will be a notification:</p>

<pre><code>[xajler.github.com] Page build successful

Your page has been built. If this is the first time you've pushed, it may take a few minutes to appear, otherwise your changes should appear immediately.
</code></pre>

<p>And if you navigate to <code>http://xajler.github.com</code> (change xajler to your User/Organization name)
you&#8217;ll see the post and site online!</p>

<h2>The custom domain via CNAME</h2>

<p>The <code>http://xajler.github.com</code> is not really the URL that you&#8217;ll want to have for the blog.
<a href="http://www.github.com">Github</a> provides the way to customize the domain name.</p>

<h3>Setting custom domain name</h3>

<p>To setup the custom domain name that will point to your Github pages, there is need to
create the <code>CNAME</code> file in <code>source</code> folder. This <code>CNAME</code> will be copied to <code>_deploy</code> folder
when executing <code>rake deploy</code> and will be used by <a href="http://www.github.com">Github</a> to point to the provided domain.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim <span class="nb">source</span>/CNAME
</span></code></pre></td></tr></table></div></figure>


<p>I&#8217;ve added my subdomain for my domain <a href="http://metaintellect.com">metaintellect</a>.</p>

<pre><code>blog.metaintellect.com
</code></pre>

<p>Deploy with <code>rake deploy</code> and it should now be pushed and visible in your
<a href="http://www.github.com">Github</a> repo (<code>xajler.github.com</code>).</p>

<h2>Setting DNS for subdomain</h2>

<p>The DNS nameservers for my domain <a href="http://metaintellect.com">metaintellect</a> are declared on
<a href="http://dynadot.com">dynadot</a>.</p>

<p>Here is my configuration to make the <code>blog.metaintellect.com</code> CNAME work with <a href="http://pages.github.com">Github Pages</a>:</p>

<p><img src="https://pbs.twimg.com/media/A44tgDACAAAsDwn.png:large"></p>

<h2>Conclusion</h2>

<p>I hope that I will now blog my notes about so many tehnical IT stuff I do everyday, and
now with markdown and the <a href="http://www.github.com">Github</a> it is fairly easy and fun!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Backing up PostgreSQL with backup and whatever gems on VPS]]></title>
    <link href="http://learnaholic.me/2012/10/10/backing-up-postgresql-with-backup-and-whatever-gems/"/>
    <updated>2012-10-10T07:12:00+02:00</updated>
    <id>http://learnaholic.me/2012/10/10/backing-up-postgresql-with-backup-and-whatever-gems</id>
    <content type="html"><![CDATA[<h2>Mission</h2>

<p>A few months ago I&#8217;ve created a <a href="https://github.com/xajler/mi-guest">simple Rails app</a> (after 6 years!!!)
that essentially stores guests and keeping track of accommodations for my friend&#8217;s villa.</p>

<p>After a month in production I&#8217;ve started thinking about backup of the database. Code is on
the <a href="http://github.com">Github</a> so I have only need to worry about database.</p>

<p>My first initial thoughts were on <a href="http://dropbox.com">Dropbox</a>, I&#8217;ve installed the <a href="http://dropbox.com">Dropbox</a> client on my no GUI
Ubuntu Server, but when I ran the <a href="http://dropbox.com">Dropbox</a> the memory usage got doubled and I remove it all together!</p>

<p>Then I started thinking about good old FTP backup, I was sure that I want backup somewhere else
than the VPS where the database is running. I have one  account at <a href="http://arvixe.com">Arvixe</a>, Unlimited Linux hosting
and I&#8217;ve created the FTP user and even found this <a href="https://github.com/meskyanichi/backup">backup gem</a> back then
but I just drop all together until today.</p>

<p>I have VPS at <a href="http://buyvm.net">BuyVM (ex Frantech)</a> and they are offering a free storage
VPS of 5Gb which is more than enough for my backup. I signed for an account and idea came again to use
it as backup&#8230;</p>

<p>&#8230;and the idea expanded to include every day schedule of backup.</p>

<p>Incidentally, to day I finally get started my <a href="http://octopress.org">Octopress</a> blog
deployed via <a href="http://pages.github.com">Github Pages</a>, so I&#8217;m
writting all the steps as notes for futre usage, or if someone can be useful&#8230;</p>

<h2>backup Gem</h2>

<p>The <a href="https://github.com/meskyanichi/backup">backup gem</a> is one great gem with a lot of
backup options like databases, storages, compressions, encrypt-ors,&#8230;</p>

<h3>Install</h3>

<p>Installation is a straight forward like any Ruby Gem:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install backup
</span></code></pre></td></tr></table></div></figure>


<h3>Backup Model Generator</h3>

<p>backup gem have its own backup &#8220;model&#8221; generator that creates backup config files, this is a comprehensive usage:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Usage:
</span><span class='line'>  backup generate:model --trigger<span class="o">=</span>TRIGGER
</span><span class='line'>
</span><span class='line'>Options:
</span><span class='line'>  --trigger<span class="o">=</span>TRIGGER
</span><span class='line'>  <span class="o">[</span>--config-path<span class="o">=</span>CONFIG_PATH<span class="o">]</span>  <span class="c"># Path to your Backup configuration directory</span>
</span><span class='line'>  <span class="o">[</span>--databases<span class="o">=</span>DATABASES<span class="o">]</span>      <span class="c"># (mongodb, mysql, postgresql, redis, riak)</span>
</span><span class='line'>  <span class="o">[</span>--storages<span class="o">=</span>STORAGES<span class="o">]</span>        <span class="c"># (cloudfiles, dropbox, ftp, local, ninefold, rsync, s3, scp, sftp)</span>
</span><span class='line'>  <span class="o">[</span>--syncers<span class="o">=</span>SYNCERS<span class="o">]</span>          <span class="c"># (cloud_files, rsync_local, rsync_pull, rsync_push, s3)</span>
</span><span class='line'>  <span class="o">[</span>--encryptors<span class="o">=</span>ENCRYPTORS<span class="o">]</span>    <span class="c"># (gpg, openssl)</span>
</span><span class='line'>  <span class="o">[</span>--compressors<span class="o">=</span>COMPRESSORS<span class="o">]</span>  <span class="c"># (bzip2, gzip, lzma, pbzip2)</span>
</span><span class='line'>  <span class="o">[</span>--notifiers<span class="o">=</span>NOTIFIERS<span class="o">]</span>      <span class="c"># (campfire, hipchat, mail, presently, prowl, twitter)</span>
</span><span class='line'>  <span class="o">[</span>--archives<span class="o">]</span>
</span><span class='line'>  <span class="o">[</span>--splitter<span class="o">]</span>                 <span class="c"># use `--no-splitter` to disable</span>
</span><span class='line'>                              <span class="c"># Default: true</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Generate a Backup model file</h3>

<p>Let&#8217;s create simple config file with backup generator:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>backup generate:model --trigger miguest_backup --databases<span class="o">=</span><span class="s2">&quot;postgresql&quot;</span> <span class="se">\</span>
</span><span class='line'>  --storages<span class="o">=</span><span class="s2">&quot;ftp&quot;</span> --compressors<span class="o">=</span><span class="s2">&quot;bzip2&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>This will create a <code>config.rb</code> and <code>models/miguest_backup.rb</code> files in <code>~/Backup</code> folder.</p>

<h3>Refine backup Configuration</h3>

<p>Backup generator will create boilerplate model template needing more refinement. It looks something like this:</p>

<figure class='code'><figcaption><span>Boilerplate backup model template - miguest_backup.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># encoding: utf-8</span>
</span><span class='line'>
</span><span class='line'><span class="c1">##</span>
</span><span class='line'><span class="c1"># Backup Generated: miguest_backup</span>
</span><span class='line'><span class="c1"># Once configured, you can run the backup with the following command:</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># $ backup perform -t miguest_backup [-c &lt;path_to_configuration_file&gt;]</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="no">Backup</span><span class="o">::</span><span class="no">Model</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:miguest_backup</span><span class="p">,</span> <span class="s1">&#39;Description for miguest_backup&#39;</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1">##</span>
</span><span class='line'>  <span class="c1"># Split [Splitter]</span>
</span><span class='line'>  <span class="c1">#</span>
</span><span class='line'>  <span class="c1"># Split the backup file in to chunks of 250 megabytes</span>
</span><span class='line'>  <span class="c1"># if the backup file size exceeds 250 megabytes</span>
</span><span class='line'>  <span class="c1">#</span>
</span><span class='line'>  <span class="n">split_into_chunks_of</span> <span class="mi">250</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">##</span>
</span><span class='line'>  <span class="c1"># PostgreSQL [Database]</span>
</span><span class='line'>  <span class="c1">#</span>
</span><span class='line'>  <span class="n">database</span> <span class="no">PostgreSQL</span> <span class="k">do</span> <span class="o">|</span><span class="n">db</span><span class="o">|</span>
</span><span class='line'>    <span class="n">db</span><span class="o">.</span><span class="n">name</span>               <span class="o">=</span> <span class="s2">&quot;my_database_name&quot;</span>
</span><span class='line'>    <span class="n">db</span><span class="o">.</span><span class="n">username</span>           <span class="o">=</span> <span class="s2">&quot;my_username&quot;</span>
</span><span class='line'>    <span class="n">db</span><span class="o">.</span><span class="n">password</span>           <span class="o">=</span> <span class="s2">&quot;my_password&quot;</span>
</span><span class='line'>    <span class="n">db</span><span class="o">.</span><span class="n">host</span>               <span class="o">=</span> <span class="s2">&quot;localhost&quot;</span>
</span><span class='line'>    <span class="n">db</span><span class="o">.</span><span class="n">port</span>               <span class="o">=</span> <span class="mi">5432</span>
</span><span class='line'>    <span class="c1"># db.socket             = &quot;/tmp/pg.sock&quot;</span>
</span><span class='line'>    <span class="c1"># db.additional_options = [&quot;-xc&quot;, &quot;-E=utf8&quot;]</span>
</span><span class='line'>    <span class="c1"># Optional: Use to set the location of this utility</span>
</span><span class='line'>    <span class="c1">#   if it cannot be found by name in your $PATH</span>
</span><span class='line'>    <span class="c1"># db.pg_dump_utility = &quot;/opt/local/bin/pg_dump&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">##</span>
</span><span class='line'>  <span class="c1"># FTP (File Transfer Protocol) [Storage]</span>
</span><span class='line'>  <span class="c1">#</span>
</span><span class='line'>  <span class="n">store_with</span> <span class="no">FTP</span> <span class="k">do</span> <span class="o">|</span><span class="n">server</span><span class="o">|</span>
</span><span class='line'>    <span class="n">server</span><span class="o">.</span><span class="n">username</span>     <span class="o">=</span> <span class="s2">&quot;my_username&quot;</span>
</span><span class='line'>    <span class="n">server</span><span class="o">.</span><span class="n">password</span>     <span class="o">=</span> <span class="s2">&quot;my_password&quot;</span>
</span><span class='line'>    <span class="n">server</span><span class="o">.</span><span class="n">ip</span>           <span class="o">=</span> <span class="s2">&quot;1.2.3.4&quot;</span>
</span><span class='line'>    <span class="n">server</span><span class="o">.</span><span class="n">port</span>         <span class="o">=</span> <span class="mi">21</span>
</span><span class='line'>    <span class="n">server</span><span class="o">.</span><span class="n">path</span>         <span class="o">=</span> <span class="s2">&quot;~/backups/&quot;</span>
</span><span class='line'>    <span class="n">server</span><span class="o">.</span><span class="n">keep</span>         <span class="o">=</span> <span class="mi">5</span>
</span><span class='line'>    <span class="n">server</span><span class="o">.</span><span class="n">passive_mode</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">##</span>
</span><span class='line'>  <span class="c1"># Bzip2 [Compressor]</span>
</span><span class='line'>  <span class="c1">#</span>
</span><span class='line'>  <span class="n">compress_with</span> <span class="no">Bzip2</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Fairly straight forward refinements are needed, usernames, passwords,&#8230; After adding all
the secret stuff, the backup can be run as easy as:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>backup perform --trigger miguest_backup
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:26<span class="o">][</span>message<span class="o">]</span> Performing Backup <span class="k">for</span> <span class="s1">&#39;Description for miguest_backup (miguest_backup)&#39;</span>!
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:26<span class="o">][</span>message<span class="o">]</span> <span class="o">[</span> backup 3.0.25 : ruby 1.9.3p194 <span class="o">(</span>2012-04-20 revision 35410<span class="o">)</span> <span class="o">[</span>x86_64-linux<span class="o">]</span> <span class="o">]</span>
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:26<span class="o">][</span>message<span class="o">]</span> Database::PostgreSQL started dumping and archiving <span class="s1">&#39;miguest&#39;</span>.
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:26<span class="o">][</span>message<span class="o">]</span> Using Compressor::Bzip2 <span class="k">for </span>compression.
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:26<span class="o">][</span>message<span class="o">]</span>   Command: <span class="s1">&#39;/bin/bzip2&#39;</span>
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:26<span class="o">][</span>message<span class="o">]</span>   Ext: <span class="s1">&#39;.bz2&#39;</span>
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:28<span class="o">][</span>message<span class="o">]</span> Database::PostgreSQL Complete!
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:28<span class="o">][</span>message<span class="o">]</span> Packaging the backup files...
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:28<span class="o">][</span>message<span class="o">]</span> Splitter configured with a chunk size of 250MB.
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:28<span class="o">][</span>message<span class="o">]</span> Packaging Complete!
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:28<span class="o">][</span>message<span class="o">]</span> Cleaning up the temporary files...
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:29<span class="o">][</span>message<span class="o">]</span> Storage::FTP started transferring <span class="s1">&#39;2012.10.10.12.21.26.miguest_backup.tar&#39;</span> to <span class="s1">&#39;ftp.services.buyvm.net&#39;</span>.
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:29<span class="o">][</span>message<span class="o">]</span> Storage::FTP: Cycling Started...
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:29<span class="o">][</span>message<span class="o">]</span> Storage::FTP: Cycling Complete!
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:29<span class="o">][</span>message<span class="o">]</span> Cleaning up the package files...
</span><span class='line'><span class="o">[</span>2012/10/10 12:21:29<span class="o">][</span>warning<span class="o">]</span> Backup <span class="k">for</span> <span class="s1">&#39;Description for miguest_backup (miguest_backup)&#39;</span> Completed Successfully <span class="o">(</span>with Warnings<span class="o">)</span> in 00:00:03
</span></code></pre></td></tr></table></div></figure>


<p>And after the connecting to the storage server via FTP, there is backup:</p>

<p><img src="https://pbs.twimg.com/media/A44syBuCEAELa98.png:large"></p>

<h3>But there is more to backup gem</h3>

<p>Really, what I&#8217;m using for backup is just minimal what backup gem can offer, here is detailed
impressive list of backup features:</p>

<h4>Databases</h4>

<p>MySQL, PostgreSQL, MongoDB, Redis, Riak</p>

<h4>Compression</h4>

<p>bzip2, gzip, lzma, pbzip2</p>

<h4>Storages</h4>

<p>cloudfiles, Dropbox, FTP, local, ninefold, rsync, S3, scp, SFTP</p>

<h4>Notifiers</h4>

<p>campfire, hipchat, mail, presently, prowl, twitter</p>

<h4>Encryption</h4>

<p>GPG, OpenSSL</p>

<h2>Scheduling the backups with whenever Gem</h2>

<p><a href="https://github.com/javan/whenever">Whenever</a> is a Ruby gem that provides a clear syntax for
writing and deploying cron jobs. And this is what I need to schedule the backups to run everyday.</p>

<h3>Install</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install whenever
</span></code></pre></td></tr></table></div></figure>


<h3>Configure (Wheneverize)</h3>

<p>Configure the whenever, but first make sure that we are in backup folder <code>~/Backup</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> ~/Backup
</span></code></pre></td></tr></table></div></figure>


<p>Then create config folder:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir config
</span></code></pre></td></tr></table></div></figure>


<p>And then run the command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wheneverize .
</span><span class='line'>~ <span class="o">[</span>add<span class="o">]</span> writing <span class="s1">&#39;./config/schedule.rb&#39;</span>
</span><span class='line'>~ <span class="o">[</span><span class="k">done</span><span class="o">]</span> wheneverized!
</span></code></pre></td></tr></table></div></figure>


<p>Open the <code>config/schedule.rb</code> file and add the following:</p>

<figure class='code'><figcaption><span>whenever schedule config - config/schedule.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">every</span> <span class="mi">1</span><span class="o">.</span><span class="n">day</span><span class="p">,</span> <span class="ss">:at</span> <span class="o">=&gt;</span> <span class="s1">&#39;4:30 am&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">command</span> <span class="s2">&quot;backup perform --trigger miguest_backup&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Schedule to crontab</h3>

<p>Run <code>whenever</code> with no arguments see the <code>crontab</code> entry this will create:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>whenever
</span><span class='line'>30 4 * * * /bin/bash -l -c <span class="s1">&#39;backup perform --trigger miguest_backup&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c">## [message] Above is your schedule file converted to cron syntax; your crontab file was not updated.</span>
</span><span class='line'><span class="c">## [message] Run `whenever --help&#39; for more options.</span>
</span></code></pre></td></tr></table></div></figure>


<p>To write (or update) this job in your <code>crontab</code>, use:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>whenever --update-crontab
</span><span class='line'>~ <span class="o">[</span>write<span class="o">]</span> crontab file written
</span></code></pre></td></tr></table></div></figure>


<p>And that&#8217;s it, so what is included:</p>

<ul>
<li>Backup of postgres database.</li>
<li>Sending compressed backup via FTP.</li>
<li>Scheduled backup every day at 4:30 am.</li>
</ul>


<h2>Update</h2>

<p>The scheduled backups are working and here is the picture as proof!</p>

<p><img src="http://i47.tinypic.com/xndh7r.png"></p>

<p>Note that servers are not in same Time Zone hence offset of two hours. I know that one
is in Chicago, and second is in California or New York, but either way the scheduled backup
works!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing nginx in Mac OS X Mountain Lion with homebrew]]></title>
    <link href="http://learnaholic.me/2012/10/10/installing-nginx-in-mac-os-x-mountain-lion/"/>
    <updated>2012-10-10T03:45:00+02:00</updated>
    <id>http://learnaholic.me/2012/10/10/installing-nginx-in-mac-os-x-mountain-lion</id>
    <content type="html"><![CDATA[<h2>Install with brew</h2>

<p>Use <code>brew</code> to install the <code>nginx</code> with command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew install nginx
</span></code></pre></td></tr></table></div></figure>


<p>After install run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo nginx
</span></code></pre></td></tr></table></div></figure>


<h2>Testing</h2>

<p>Test it by going to URL:</p>

<pre><code>http://localhost:8080
</code></pre>

<h2>Configuration</h2>

<p>The default place of <code>nginx.conf</code> on Mac after installing with <code>brew</code> is:</p>

<pre><code>/usr/local/etc/nginx/nginx.conf
</code></pre>

<h3>Changing the default port</h3>

<p>The nginx default port is 8080, we shall change it to 80. First stop the nginx server if it is running by:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo nginx -s stop
</span></code></pre></td></tr></table></div></figure>


<p>Then open <code>nginx.conf</code> with:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim /usr/local/etc/nginx/nginx.conf
</span></code></pre></td></tr></table></div></figure>


<p>and change the:</p>

<figure class='code'><figcaption><span>/usr/local/etc/nginx/nginx.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='nginx'><span class='line'><span class="k">server</span> <span class="p">{</span>
</span><span class='line'>    <span class="kn">listen</span>       <span class="mi">8080</span><span class="p">;</span>
</span><span class='line'>    <span class="kn">server_name</span>  <span class="s">localhost</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">#access_log  logs/host.access.log  main;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>
</span><span class='line'>        <span class="kn">root</span>   <span class="s">html</span><span class="p">;</span>
</span><span class='line'>        <span class="kn">index</span>  <span class="s">index.html</span> <span class="s">index.htm</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>to:</p>

<figure class='code'><figcaption><span>/usr/local/etc/nginx/nginx.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='nginx'><span class='line'><span class="k">server</span> <span class="p">{</span>
</span><span class='line'>    <span class="kn">listen</span>       <span class="mi">80</span><span class="p">;</span>
</span><span class='line'>    <span class="kn">server_name</span>  <span class="s">localhost</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">#access_log  logs/host.access.log  main;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>
</span><span class='line'>        <span class="kn">root</span>   <span class="s">html</span><span class="p">;</span>
</span><span class='line'>        <span class="kn">index</span>  <span class="s">index.html</span> <span class="s">index.htm</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Save configuration and start nginx by</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo nginx
</span></code></pre></td></tr></table></div></figure>


<h2>Changing the path of defualt web location</h2>

<p>The nginx html folder (brew install only) is by the defult in:</p>

<pre><code>/usr/local/Cellar/nginx/1.2.3/html
</code></pre>

<p><strong>Note</strong>: change <code>1.2.3</code> to your nginx version.</p>

<p>The defualt path configuration:</p>

<figure class='code'><figcaption><span>/usr/local/etc/nginx/nginx.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='nginx'><span class='line'><span class="k">server</span> <span class="p">{</span>
</span><span class='line'>    <span class="kn">listen</span>       <span class="mi">80</span><span class="p">;</span>
</span><span class='line'>    <span class="kn">server_name</span>  <span class="s">localhost</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">#access_log  logs/host.access.log  main;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>
</span><span class='line'>        <span class="kn">root</span>   <span class="s">html</span><span class="p">;</span>
</span><span class='line'>        <span class="kn">index</span>  <span class="s">index.html</span> <span class="s">index.htm</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>To let say <code>Users/xajler/www</code>:</p>

<figure class='code'><figcaption><span>/usr/local/etc/nginx/nginx.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='nginx'><span class='line'><span class="k">server</span> <span class="p">{</span>
</span><span class='line'>    <span class="kn">listen</span>       <span class="mi">80</span><span class="p">;</span>
</span><span class='line'>    <span class="kn">server_name</span>  <span class="s">localhost</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">#access_log  logs/host.access.log  main;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>
</span><span class='line'>        <span class="kn">root</span>   <span class="s">/Users/xajler/www</span><span class="p">;</span>
</span><span class='line'>        <span class="kn">index</span>  <span class="s">index.html</span> <span class="s">index.htm</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>After change stop and start nginix server and nginx is now serving pages from your custom folder!</p>
]]></content>
  </entry>
  
</feed>
